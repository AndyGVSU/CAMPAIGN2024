;cdebate2.asm
;DEBATE2 

;debate_opponent_menu_draw() 
_DOMENU 
	JSR _DSMENU
@PTLOOP 
	CMP V_PARTY
	BEQ @NEXTPT
	STA V_DOPPON,X
	INX 
@NEXTPT 
	CLC 
	ADC #$01
	CMP S_PLAYER
	BNE @PTLOOP

	LDX S_PLAYER
	DEX 
	STX FVAR1 ;player count - 1

	LDA V_PARTY
	STA FVAR2 ;current party

	LDA #00
	STA FVAR3
@OPPLOOP 
	LDA FVAR3
	CLC 
	ADC #P_DOPPR2
	STA GX_CROW
	LDA #P_DOPPC
	STA GX_CCOL

	LDA FVAR3
	TAX 
	LDA V_DOPPON,X
	STA V_PARTY
	JSR _DRWPLYR
	INC FVAR3
	LDA FVAR3
	CMP FVAR1
	BNE @OPPLOOP

	LDA FVAR2
	STA V_PARTY ;reload party

	DEC FVAR3
	LDA FVAR3
	CLC 
	ADC #P_DOPPR2
	TAY 
	LDX #P_DOPPR1
	JSR _RSELECT

	RTS 

;debate_action_menu_draw() 
_DAMENU 
	LDA #C_WHITE
	STA GX_DCOL
	+__COORD P_DAMR,P_DAMC
	+__LAB2XY T_DAMENU
	JSR _GX_STR
	
	LDA #01
	STA V_DPERSNL
	
	LDA V_DQUEST
	CMP #$01
	BEQ @FAILURE

	LDX V_DQUEST
	DEX
	LDY V_PARTY
	JSR _DGETLOG
	LDY #00
	LDA (OFFSET),Y
	CMP #DBPERSNL
	BEQ @FAILURE
@SKIPLOG
	LDX DPARTY
	LDA V_DPPREV,X
	BNE @FAILURE
	RTS 
@FAILURE
	LDA #00
	STA V_DPERSNL
	LDX #00
	LDA #C_DGRAY
@LOOP
	STA V_COLRAM+552,X
	INX
	CPX #$08
	BNE @LOOP
	
	RTS
;debate_secondary_menu_draw() 
_DSMENU 
	JSR _CLRBR
	+__COORD P_DSMR,P_DSMC
	+__LAB2XY T_BACK
	JSR _GX_STR
	RTS 
;debate_issue_menu_draw() 
_DIMENU 
	+__COORD P_DIMR2,P_DIMC
	+__LAB2XY T_ISSUES
	JSR _GX_STR
	LDX #P_DIMR1
	LDY #P_DIMR3
	JSR _RSELECT
	RTS 
;debate_survey() 
;checks for issue conformity and displays
_DSURVEY 
	LDA C_MONEY
	CMP #$05
	BCS @NOMONEY
	LDA #$00
	RTS 
@NOMONEY 
	SEC 
	SBC #$05
	STA C_MONEY

	LDX V_PARTY
	JSR _DPENINC
	LDA #$01
	STA V_DPPREV,X

	JSR _DBSURVCLR
	
	+__COORD P_DCONFR,P_DCONFC
	LDY #$01
	LDA (OFFSET2),Y
	TAX 
	LDY V_PARTY
	JSR _DBIC
	BEQ @NONCONF

	+__LAB2XY T_DCONF
	JMP @DRAW
@NONCONF 
	+__LAB2XY T_DNCONF
@DRAW 
	JSR _GX_STRA

	JSR _DRWFUND
	JSR _FTC
	LDA #00
	RTS 

;debate_issue_conformity(FVAR5 = action index, X = issue index; Y = player index)
;returns A = boolean value (issue match)
;checks if issue is off-by-one or exact match
;if issue X/N, returns IC/NC (mostly unused)
_DBIC
	JSR _DLCISS
	CMP #ISSUEX
	BEQ _DBICTRUE
	CMP #ISSUEN
	BEQ _DBICFALSE
	SEC 
	SBC V_DISSUE,X
_DBIC2
	BPL @NEG
	JSR _NEGATIV
@NEG 
	CMP #$02
	BCS _DBICFALSE
_DBICTRUE
	LDA #01
	RTS
_DBICFALSE
	LDA #00
	RTS 
	
;debate_ai_issue_conformity(X = issue index; Y = player index)
;returns boolean match
;always uses CULTR (+ TV network)
_DBICAI
	JSR _DLCISS
	CMP #ISSUEX
	BEQ @FAIL
	CMP #ISSUEN
	BEQ @FAIL
	SEC 
	SBC V_DISSUE+1
	JSR _DBIC2
	RTS
@FAIL
	LDA #00
	RTS
	
;debate_load_candidate_issue(X = issue index; Y = player index)
;LOCAL: FVAR3
;A = returned issue value
_DLCISS 
	CPX #$05
	BNE @NOTOTHER
	LDA V_DOTHER,Y
	RTS
@NOTOTHER

	TXA
	PHA ;save issue index
	STY FVAR3
	CPY #$00
	BEQ @LOAD
@LOOP 
	CLC
	ADC #CANDDATA
	DEC FVAR3
	LDX FVAR3
	BNE @LOOP
@LOAD
	TAX
	LDA V_ALLCND+25,X
	STA FVAR3
	PLA 
	TAX 
	LDA FVAR3
	RTS 

;debate_draw_status() 
_DSTATUS 
	LDA V_DPHASE
	BEQ @ACTION

	RTS 
@ACTION 
	+__COORD P_DSTATR,P_DSTATC
	LDX V_PARTY
	LDA V_DPOBSC,X
	BEQ @SKIPPEN
@BLUNDER 
	+__LAB2XY T_STATP
	JMP @DRAW
@SKIPPEN 
	LDA V_DPPREV,X
	BEQ @SKIPPEN2
	JMP @BLUNDER
@SKIPPEN2 
	LDA V_DDP,X
	BMI @TROUBLE
	+__LAB2XY T_STATOK
	JMP @DRAW
@TROUBLE 
	+__LAB2XY T_STATTR
@DRAW 
	JSR _GX_STR
	RTS 

;debate_clear_screen() 
_DCLEAR 
	JSR _CLRBL
	JSR _CLRBR
	JSR _DCLRMR
	JSR _DUPNEXT
	JSR _DBSURVCLR
	
	JSR _FTC
	RTS 

_DUPNEXT
	+__LAB2XY T_UPNEXT
	+__COORD P_UPNEXR,P_UPNEXC
	JSR _GX_STR

	LDX V_PARTY
	JSR _DRWPN1
	RTS

;debate_draw_reaction() 
;draws reaction intro text
_DDRWRIN 
	+__LAB2XY T_REPLY
	+__COORD P_REACTR,P_REACTC
	JSR _GX_STR
	RTS 

;debate_check_for_reaction()
;checks if an action prompts a reaction
_DRCTCHK
	LDY #00
	LDA (OFFSET2),Y
	JSR _DAISATK ;new
	RTS

;debate_reaction_select() 
_DRCTSEL 
	JSR _DCLRMR

	+__COORD P_DATTOR,P_DATTOC

	LDY #$02
	LDA (OFFSET2),Y
	STA V_PARTY ;defender
	JSR _DRWPLYR

	+__COORD P_DATTR,P_DATTC
	+__LAB2XY T_ATTACK
	JSR _GX_STR

	+__COORD P_DATTAR,P_DATTAC
	LDA DPARTY
	STA V_PARTY ;attacker
	JSR _DRWPLYR

	JSR _FTC
@BACK
	LDY #$02
	LDA (OFFSET2),Y
	STA V_PARTY ;defender
	JSR _CANDLOAD
	LDA #00
	STA V_REDRW1
	JSR _DRWCAND

	JSR _DSMENU
	+__COORD P_DRMENR,P_DRMENC
	+__LAB2XY T_DRMENU
	JSR _GX_STR

	LDX #P_DRMENR
	LDY #P_DRMEN2
	JSR _RSELECT

	LDY #$04
	STA (OFFSET2),Y
	CMP #$01
	BNE @FTC

	JSR _DIMENU
	BNE @SELECT
	JMP @BACK
@SELECT 
	SEC 
	SBC #$01
	LDY #$05
	STA (OFFSET2),Y
@FTC 
	JSR _FTC
	BEQ @CONFIRM
	JMP @BACK
@CONFIRM 
	RTS 

;debate_turn_reset() 
_DRESET 
	LDX #00
	LDA #$FF
@LOOP 
	STA V_DACT,X
	INX 
	CPX #$1B
	BNE @LOOP

	LDX #00
@LOOP2 
	LDA #00
	STA V_DPOBSC,X
	LDA V_DPCURR,X
	STA V_DPPREV,X

	LDA #00
	STA V_DPCURR,X
	INX 
	CPX S_PLAYER
	BNE @LOOP2
	RTS 

;debate_action_is_attack(A = action index) 
_DAISATK 
	CMP #DBDIFFER
	BEQ @TRUE
	CMP #DBMORAL
	BEQ @TRUE
	CMP #DBPERSNL
	BEQ @TRUE
	LDA #00
	RTS 
@TRUE 
	LDA #$01
	RTS

;debate_log_view()
_DLOG
	LDA S_SKIPGAME
	BNE @RTS
	
	JSR _DSMENU
	JSR _DFINAL

	+__COORD P_DLOGMR,P_DLOGMC
	+__LAB2XY T_DLOGM
	JSR _GX_STR
	LDX #P_DLOGMR2
	LDY #P_DLOGMR3
	JSR _RSELECT
	BEQ @VIEWLOG
@RTS
	RTS 
@VIEWLOG 
	LDA #00
	STA DPARTY
@LOOP 
	JSR _DDRWLOG
	INC DPARTY
	LDA DPARTY
	CMP S_PLAYER
	BNE @LOOP
	BEQ _DLOG

;debate_draw_final_results()
_DFINAL
	JSR _DRWBORD2
	
	+__COORD P_DFINR,P_DFINC
	+__LAB2XY T_DFINAL
	JSR _GX_STR
	
	+__COORD P_DFINR2,P_DFINC
	+__LAB2XY T_UNFAV
	JSR _GX_STR
	
	JSR _DFAVOR
	RTS

;debate_draw_favorables()
_DFAVOR
	LDA #00
	STA DPARTY
@TOP
	LDA DPARTY
	CLC
	ADC #P_DFINR3
	
	STA GX_CROW
	STA FVAR6
	LDA #P_DFINC
	STA GX_CCOL
	
	LDA DPARTY
	STA V_PARTY
	TAX
	LDA V_DDP,X
	CLC
	ADC #$24
	STA FARG2
	LDA #$48
	STA FARG4
	LDA #$00
	STA FARG1
	STA FARG3
	
	LDA DPARTY
	JSR _DRWPLYR
	
	LDA #P_DFINC2
	STA GX_CCOL
	
	JSR _PERCENT
	+__LAB2XY V_FPOINT
	JSR _GX_STR
	
	JSR _DRWSPAC
	
	LDA #$48
	SEC
	SBC FARG2
	STA FARG2
	
	JSR _PERCENT
	+__LAB2XY V_FPOINT
	JSR _GX_STR
	
	JSR _DRWSPAC
	JSR _DDRWNAT
	
	INC DPARTY
	LDA DPARTY
	CMP S_PLAYER
	BNE @TOP
RTS
	
;debate_draw_national_bonus()
_DDRWNAT
	LDA #VK_SPACE
	JSR _GX_CHAR
	
	LDX DPARTY
	LDA V_DNATL,X
	BMI @NEG
	STA FARG1,X
	LDA #$01
	BNE @DRAW
@NEG
	EOR #$FF
	CLC
	ADC #$01
	STA FARG1,X
	LDA #00
@DRAW
	JSR _DRWSIGN
	
	LDX DPARTY
	LDA FARG1,X
	TAX
	LDA #00
	JSR _INTCMB
	
	RTS

;draw_sign(A = success value)
;draws plus '+' or minus '-' sign	
_DRWSIGN
	BEQ @POS
	LDA #C_LGREEN
	STA GX_DCOL
	LDA #$2B
	BNE @DRAW
@POS
	LDA #C_PINK
	STA GX_DCOL
	LDA #$2D
@DRAW
	JSR _GX_STR2
	RTS

;debate_national_bonus()
_DNATL
	JSR _DNATLC
	JSR _DNATLA
	RTS
	
;debate_national_bonus_calc()
_DNATLC
	JSR _MAXR
	LDX #00
	LDY #00
@COPY
	LDA V_DDP,X
	CLC
	ADC #$24
	STA V_MAX,Y
	INX
	INY
	INY
	CPX S_PLAYER
	BNE @COPY
	
	JSR _MAX2
	BEQ @TIE
	TAX
	DEX
	LDA #$02
	STA V_DNATL,X
	JMP @DONE
@TIE
	LDX #00
@MAXLOOP
	LDA V_DDP,X
	CLC
	ADC #$24
	CMP FRET1
	BNE @NOTMAX
	LDA #$02
	STA V_DNATL,X
@NOTMAX
	INX
	CPX S_PLAYER
	BNE @MAXLOOP
@DONE ;?

	LDY #00
@PENLOOP
	LDA #00
	STA FVAR6 ;penalty count
	LDA V_DPCOUN,Y
@MOREPEN
	SEC
	SBC #$03
	BMI @NOPEN
	INC FVAR6
	BNE @MOREPEN
@NOPEN
	LDA V_DNATL,Y
	SEC
	SBC FVAR6
	STA V_DNATL,Y
	
	INY
	CPY S_PLAYER
	BNE @PENLOOP
	RTS

;debate_national_bonus_apply()
_DNATLA
	LDA #$01
	STA FSTATE
	JSR _CPOFFR
@STLOOP
	LDX #00
@PTLOOP 
	TXA
	TAY
	LDA V_DNATL,X
	STA FVAR6 ;national bonus value
	
	TXA
	TAY
	STY FY1
	LDA (CP_ADDR),Y
	STA FSUS2
	LDA FVAR6
	JSR _ADDSUS
	LDA FSUS1
	LDY FY1
	STA (CP_ADDR),Y
	
	INX
	CPX S_PLAYER
	BNE @PTLOOP
	
	JSR _CPOFFI
	INC FSTATE
	LDA FSTATE
	CMP #STATE_C
	BNE @STLOOP
	
	RTS

;debate_draw_question_result() 
_DQRESLT
	JSR _GX_CLRS
	JSR _DQRES2
@ACTLOOP 
	LDA #00
	STA V_DPCQAG
	STA V_DPCQDG
	
	LDY #00
	LDA (OFFSET2),Y
	STA FVAR5 ;stored action code
	JSR _DACTEXE
	JSR _DDPTRANS
;@ISACT
	JSR _DQRES3
	BNE @ACTLOOP
	
	JSR _DQRES2
@RCTLOOP
	LDA #00
	STA V_DPCQAG
	STA V_DPCQDG
	
	LDY #$04
	LDA (OFFSET2),Y
	CMP #$FF
	BEQ @ISREACT
	JSR _DRCTEXE
	JSR _DDPTRANS
@ISREACT

	JSR _DQRES3
	BNE @RCTLOOP

	JSR _DQRES2
@CLEAR
	LDA S_SKIPGAME
	BNE @SKIPG
	
	JSR _DRWBORD2

	+__COORD P_DQAR,P_DQAC
	JSR _DDRWACT

	INC GX_CROW
	INC GX_CROW
	LDA #P_DQRC
	STA GX_CCOL
	JSR _DDRWRCT

	JSR _DDRWAUD
	JSR _FTC
@SKIPG
	JSR _DQRES3
	BNE @CLEAR
	RTS 
;debate_result_reset 
_DQRES2 
	LDA #00
	STA DPARTY
	+__LAB2O2 V_DACT
	RTS 
;debate_result_loop_inc 
_DQRES3 
	JSR _DACTINC
	INC DPARTY
	LDA DPARTY
	CMP S_PLAYER
	RTS 

;debate_turn_result_draw_action() 
_DDRWACT
	+__LAB2O T_DRESLT

	LDY #$01
	LDA (OFFSET2),Y
	STA GX_REG ;store issue

	LDY #00
	LDA (OFFSET2),Y
	JSR _DDRWRES
	
	RTS 

;debate_turn_result_draw_reaction() 
;LOCAL: FVAR5
_DDRWRCT 
	+__LAB2O T_DRESLT
	
	LDY #$05
	LDA (OFFSET2),Y
	STA GX_REG ;store issue (..)
	
	LDY #$04
	LDA (OFFSET2),Y
	STA FVAR5
	CMP #$FF
	BEQ @RTS

	CLC 
	ADC #$08
	JSR _DDRWRES
	;;
@RTS 
	RTS 

;debate_turn_result_draw(A = act/rct index)
_DDRWRES
	TAX
	LDA D_DRESLT,X
	CLC
	ADC OFFSET
	STA OFFSET
	BCC @CARRY
	INC OFFSET+1
@CARRY 

	LDY #02
	LDA (OFFSET2),Y
	STA V_PARTY ;store opponent target (regardless of relevance)
	
	+__O2XY
	JSR _GX_STR
	RTS 

;debate_draw_issue(A = issue index)
_DDRWISS
	TAX
	+__LAB2O T_ISSUES+1
	
	LDY #$06
	JSR _OFFSET
	
	LDY #00
@DRWLOOP
	LDA (OFFSET),Y
	STA SCRATCH,Y
	INY
	CPY #05
	BNE @DRWLOOP
	
	LDA #00
	STA SCRATCH+5
	LDA #C_BLUE
	STA GX_DCOL
	+__LAB2XY SCRATCH
	JSR _GX_STR
	RTS

;debate_action_execute(FVAR5 = action code)
_DACTEXE	
	LDA FVAR5
	CMP #DBREST
	BNE @PERSONAL
	LDX DPARTY
	LDA #$FE
	JSR _DDPADDA2
	LDX DPARTY
	JSR _DPENRM
	LDA #01
	JMP @SUCCESS
@PERSONAL
	
@ALLOTHERS
	JSR _DBEFFEC
@SUCCESS
	LDY #03
	STA (OFFSET2),Y
	
	LDA FVAR5
	CMP #DBREST
	BEQ @RTS
	JSR _DAISATK
	BNE @RTS
	JSR _DDPADD
@RTS
	RTS

;debate_action_effective()
;returns boolean whether action was effective or ineffective
_DBEFFEC
	LDA #00
	STA FVAR4 ;debate action success byte (matched against D_DBACT by action code)
	STA FX1 ;PIVOT autofail
	
	LDY #01
	LDA (OFFSET2),Y
	STA FVAR6 ;store issue temp
	
	LDA FVAR6
	JSR _DBCS
	CLC
	ROR
	ROR
	STA FVAR4
	
	LDX FVAR6
	LDY DPARTY
	JSR _DLCISS
	CMP #ISSUEN
	BEQ @AUTOFAIL
	CMP #ISSUEX
	BNE @XCHECK
	LDA FVAR5
	CMP #DBPIVOT
	BEQ @PIVOT1 ;if action is not a PIVOT, issue X fails
	CMP #DBMORAL ;reaction pivot
	BEQ @PIVOT1
	BNE @AUTOFAIL
@PIVOT1
	LDA FVAR4
	BEQ @XCHECK ;if CS, the PIVOT failed already - NEEDS TO FINISH CALCULATING
@AUTOFAIL
	LDA #01
	STA FX1
@XCHECK
	
	LDX FVAR6
	LDY DPARTY
	JSR _DBIC ;self IC
	CLC
	ROR
	ROR
	ROR
	ORA FVAR4
	STA FVAR4
	
	LDX FVAR6
	LDY #02
	LDA (OFFSET2),Y
	TAY
	JSR _DBIC ;opponent IC
	CLC
	ROR
	ROR
	ROR
	ROR
	ORA FVAR4
	STA FVAR4
	
	LDX FVAR5
	LDA D_DBACT,X
	AND #%11100000 ;check calculated success value against action requirements
	EOR FVAR4
	BEQ @TRUE
	AND #%11100000
	STA FVAR6 ;hold NOT(XOR)
	LDA D_DBACT,X
	AND #%00011100
	ASL
	ASL
	ASL
	AND FVAR6
	BEQ @TRUE
@FALSE
	LDA #00
	BEQ @RTS
@TRUE
	LDA FX1
	BNE @FALSE
	LDA #01
@RTS
	RTS

;debate_reaction_effective(FVAR5 = reaction index)
;returns boolean (reaction was effective)
_DBREFFEC
	LDY #00 ;PERSONAL has to be handled here to take REST into account
	LDA (OFFSET2),Y
	CMP #DBPERSNL
	BNE @PERSONAL
	LDY #02
	LDA (OFFSET2),Y
	TAX
	LDA V_DPPREV,X
	LDY #03
	STA (OFFSET2),Y
@PERSONAL
	LDY #03
	LDA (OFFSET2),Y
	STA FVAR6 ;attacker success value
	
	LDA FVAR5
	CMP #DBACCR
	BNE @PIVOT
	LDA FVAR6
	RTS
@PIVOT
	CMP #DBPIVR
	BNE @COUNTER
	LDA #DBMORAL+1
	STA FVAR5
	JSR _DBEFFEC
	RTS
@COUNTER
	LDA FVAR6
	EOR #%00000001
	RTS
	
;debate_reaction_execute()
_DRCTEXE
	LDY #04
	LDA (OFFSET2),Y
	STA FVAR5
	JSR _DBREFFEC
	
	LDY #06
	STA (OFFSET2),Y
	CMP #01 ;reaction success = PERSONAL failure
	BEQ @PERSONAL
	LDY #00
	LDA (OFFSET2),Y
	CMP #DBPERSNL
	BNE @PERSONAL
	LDY #02
	LDA (OFFSET2),Y
	TAX
	JSR _DPENADD ;successful PERSONAL always adds another penalty
@PERSONAL
	JSR _DDPADDO
	RTS

;debate_transfer_gain_values()
_DDPTRANS
	LDX DPARTY
	LDA V_DPCQAG ;passive gain is also "attacker"
	CLC
	ADC V_DDPQ,X
	STA V_DDPQ,X
	
	LDY #$02
	LDA (OFFSET2),Y
	TAX
	LDA V_DPCQDG ;always defender
	CLC
	ADC V_DDPQ,X
	STA V_DDPQ,X

	RTS

;debate_add_dp(FVAR4 = action's calculated success byte, FVAR5 = action index, OFFSET2 set to action block)
;adds DP to attacker (and defender if applicable) according to the given event and success values
_DDPADD
	LDA FVAR5
	CMP #DBALLY
	BEQ @ALLY
	CMP #DBPIVOT
	BNE @PIVOT
	LDY #03
	LDA (OFFSET2),Y
	BEQ @PIVOT
	LDA FVAR4
	AND #%11000000 ;EXCEPTION 1: for successful PIVOT (NS), if NC, no points
	BEQ @RTS
	LDA FVAR5
@PIVOT
	ASL
	CLC
	LDY #03
	ADC (OFFSET2),Y
	TAX
	LDA D_DPPGAIN,X
	JSR _DDPADDA
@RTS
	RTS
@ALLY
	LDA #03 ;"reaction" code for ALLY
	ASL
	ASL
	STA FY1
	LDY #03
	LDA (OFFSET2),Y
	JMP _DDPADDO3
	
_DDPADDO ;reaction variant
	LDY #04
	LDA (OFFSET2),Y
	ASL
	ASL
	STA FY1 ;base offset
	
	LDY #06
	LDA (OFFSET2),Y
_DDPADDO3
	ASL
	CLC
	ADC FY1
	TAX
	STX FY1 ;final offset
	LDA D_DPOGAIN,X
	JSR _DDPADDO2
	JSR _DDPADDA
	
	INC FY1
	LDX FY1
	LDA D_DPOGAIN,X
	JSR _DDPADDO2
	JSR _DDPADDD
	RTS
;differ halving
_DDPADDO2
	PHA
	LDY #00
	LDA (OFFSET2),Y
	CMP #DBDIFFER ;EXCEPTION 2: DIFFER earns half points
	BNE @HALF
	PLA
	BPL @POS
	JSR _NEGATIV
	LSR
	JSR _NEGATIV
	JMP @RTS
@POS
	LSR
@RTS
	RTS
@HALF
	PLA
	RTS
	
;debate_attacker_add_dp(A = amt)
_DDPADDA
	STA FRET3
	LDX DPARTY
	JSR _DPCHK
	LDA FRET3
	JSR _DDPADDA2
	RTS
;debate_defender_add_dp(A = amt)
_DDPADDD
	STA FRET3
	LDY #$02
	LDA (OFFSET2),Y
	TAX
	JSR _DPCHK
	LDA FRET3
	JSR _DDPADDD2
	RTS
;debate_attacker_add_dp_no_penalty_check(A = amt)
_DDPADDA2
	CLC
	ADC V_DPCQAG
	STA V_DPCQAG
	RTS
;debate_defender_add_dp_no_penalty_check(A = amt)
_DDPADDD2
	CLC
	ADC V_DPCQDG
	STA V_DPCQDG
	RTS
;debate_action_penalty_check(FRET3 = amt)
_DPCHK
	LDA FRET3
	BPL @POS
	LDY #00
	LDA (OFFSET2),Y
	CMP #DBREST
	BEQ @POS ;no penalty for REST
	LDY #04
	LDA (OFFSET2),Y
	CMP #DBACCR
	BNE @PEN
	LDY #06
	LDA (OFFSET2),Y
	BEQ @PEN
	RTS ;no penalty for successful ACCEPT
@PEN
	JMP _DPENADD
@POS
	RTS
;debate_penalty_add(X = party)
_DPENADD
	JSR _DPENINC
	
	LDA #$01
	STA V_DPCURR,X
	
	LDA #$08
	JSR _RNG
	CMP C_CHAR
	BCC @RTS
	LDA #$01
	STA V_DPOBSC,X
@RTS
	RTS
;debate_penalty_remove(X = party)
_DPENRM
	LDA #00
	STA V_DPPREV,X
	LDA V_DPCOUN,X
	BEQ @RTS
	SEC
	SBC #$01
	STA V_DPCOUN,X
@RTS
	RTS

;debate_penalty_count_increment(X = party)
_DPENINC
	INC V_DPCOUN,X
	RTS
	
;debate_correct_selected_issue(A = issue index)
_DBCS
	CMP V_DISS0
	BEQ @TRUE
	CMP V_DISS1
	BEQ @TRUE
	LDA #00
	RTS
@TRUE
	LDA #01
	RTS
	
;debate_get_log(X = question index (starting with 1), Y = player index)
;sets OFFSET to log block
_DGETLOG
	TYA
	DEX
	STA FY1
	LDY #$1C
	+__LAB2O V_DBLOG
	JSR _OFFSET
	LDX FY1
	LDY #DBLOGBLOCK
	JSR _OFFSET
	RTS

;debate_add_log(X = question index, starting with 1)
_DADDLOG
	DEX
	+__LAB2O V_DBLOG
	LDY #DBLOGBLOCK*PLAYERMAX
	JSR _OFFSET
	LDY #00
@ACTLOOP
	LDA V_DACT,Y
	STA (OFFSET),Y
	INY
	CPY #DBLOGBLOCK*PLAYERMAX
	BNE @ACTLOOP
	RTS

;debate_penalty_log_counts(X = question index) 
_DPENLOG
	+__LAB2O V_DPCLOG
	LDY #$04
	JSR _OFFSET
	
	LDY #00
@LOOP
	LDA V_DPCOUN,Y
	STA (OFFSET),Y
	INY
	CPY #$04
	BNE @LOOP
	RTS
	
;debate_question_dp_to_region_cp()
_DAPLYDP
	;no negative CP
	LDX #00
@COPY
	LDA V_DDPQ,X
	STA V_STRING,X ;scratch
	INX
	CPX S_PLAYER
	BNE @COPY
@DPPOSLP
	LDX #00
@NONEG
	LDA V_STRING,X
	BMI @INCDP
	INX
	CPX S_PLAYER
	BNE @NONEG
	JMP @DPPOS
@INCDP	
	LDX #00
@INCLP
	INC V_STRING,X
	INX
	CPX S_PLAYER
	BNE @INCLP
	BEQ @DPPOSLP
@DPPOS

	LDA #00
	STA V_PARTY
@PLYLOOP
	LDA V_PARTY
	JSR _CANDLOAD
	
	LDX V_DQUEST
	LDA V_DSTATE-1,X
	STA FVAR6 ;question state
	JSR _CPOFFS
	
	JSR _DAPLYDP3
	LDA C_HOME
	CMP FVAR6
	BNE @NOMATCH
	;if home state, add additional CP
	INC V_STRING,X
@NOMATCH
	JSR _DAPLYDP2
	
	LDA FVAR6
	JSR _STATEGR
	JSR _LREGLIM
	
	JSR _DAPLYDP3
	LDA LOWSTATE
	JSR _CPOFFS
@REGLOOP
	JSR _DAPLYDP2
	
	JSR _CPOFFI
	INC LOWSTATE
	LDA LOWSTATE
	CMP HIGHSTATE
	BNE @REGLOOP
	
	INC V_PARTY
	LDA V_PARTY
	CMP S_PLAYER
	BNE @PLYLOOP
	RTS
;debate_add_gain_to_state()
_DAPLYDP2
	LDX V_PARTY
	LDA V_STRING,X
	STA FRET1
	JSR _ADDCP
	RTS
;reset X/Y
_DAPLYDP3
	LDA V_PARTY
	TAX
	TAY
	INY
	RTS

;debate_add_dp_gain_to_dp_total()
_DDPTOTL
	LDX #00
@LOOP
	LDA V_DDP,X
	CLC
	ADC V_DDPQ,X
	BMI @NEG
	CMP #37
	BCC @NOVF
	LDA #36
	BNE @NOVF
@NEG
	CMP #-36
	BCS @NOVF
	LDA #-36
@NOVF
	STA V_DDP,X
	LDA #00
	STA V_DDPQ,X
	INX
	CPX S_PLAYER
	BNE @LOOP
	RTS

;debate_audience_reaction_draw()
_DDRWAUD
	LDA #00
	STA FVAR5
	
	LDX #$0A
	STX FX1 ;store row
@TOP
	LDA FX1
	STA GX_CROW
	LDA #P_DAUDC
	STA GX_CCOL
	
	LDA FVAR5
	BEQ @SKIP
	LDY #$02
	LDA (OFFSET2),Y
	TAY
	LDA #$01
	BNE @SKIP2
@SKIP
	LDY DPARTY
@SKIP2
	STY FVAR6 ;target
	LDA V_DPOBSC,Y
	BNE @DRAW ;A = 1, boos
	
	LDA V_DPCURR,Y
	BNE @MURMUR
	
	LDA #$04
	JSR _RNG
	BEQ @DRAW
@MURMUR
	LDA #$02 ;murmurs
@DRAW
	JSR _DDRWAU2
	
	LDX FX1
	INX
	STX FX1
	STX GX_CROW
	LDA #P_DAUDC
	STA GX_CCOL
	
	LDA FVAR6
	STA V_PARTY
	JSR _DRWPLYR
	
	LDY #$04
	LDA (OFFSET2),Y
	CMP #$FF
	BEQ @RTS ;exit if no reaction
	
	INC FVAR5
	LDX FX1
	INX
	INX
	STX FX1
	LDA FVAR5
	CMP #$02
	BNE @TOP
@RTS
	RTS
;debate_draw_audience_text(A = reaction)
_DDRWAU2
	STA FARG1
	+__LAB2XY T_DAUDI
	JSR _GX_STR
	LDX FARG1
	+__LAB2O T_DAUDI
	LDA OFFSET
	CLC
	ADC D_DBAUDI,X
	STA OFFSET
	BCC @CARRY
	INC OFFSET+1
@CARRY
	+__O2XY
	JSR _GX_STR
	RTS
	
;debate_draw_log()
_DDRWLOG
	JSR _GX_CLRS
	JSR _DRWBORD2
	
	+__COORD P_DLOGOR,P_DLOGOC
	+__LAB2XY T_DLOG
	JSR _GX_STR
	
	+__COORD P_DLOGPR,P_DLOGPC
	LDA DPARTY
	STA V_PARTY
	JSR _DRWPLYR
	
	+__COORD P_DLOGNR,P_DLOGNC
	JSR _DDRWTV
	
	LDA #00
	STA FSTATE ;question index
@TOPLOOP
	LDA FSTATE
	CLC
	ADC #P_DLOGTR
	STA GX_CROW
	LDA #P_DLOGTC
	STA GX_CCOL

	LDA #C_YELLOW
	STA GX_DCOL
	
	LDX FSTATE
	LDA V_DSTATE,X
	JSR _DRWPOST
	
	INC GX_CCOL
	
	JSR _DRWSPAC
	
	LDX FSTATE
	INX
	STX V_DQUEST
	JSR _DRWTOPC
	INC FSTATE
	LDA FSTATE
	CMP #$03
	BNE @TOPLOOP

	LDA #$01
	STA FSTATE
	LDA #P_DLOGAR
	STA FVAR6 ;store row
@ACTLOOP
	LDA FVAR6
	STA GX_CROW
	LDA #P_DLOGTC
	STA GX_CCOL
	
	LDA #C_PINK
	STA GX_DCOL
	
	+__LAB2O V_DPCLOG
	LDX FSTATE
	DEX
	LDY #$04
	JSR _OFFSET
	LDY DPARTY
	LDA (OFFSET),Y
	TAX
	LDA #00
	JSR _INTCMB
	
	LDX FSTATE
	LDY DPARTY
	JSR _DGETLOG
	
	LDA OFFSET
	STA OFFSET2
	LDA OFFSET+1
	STA OFFSET2+1
	
	LDA FVAR6
	STA GX_CROW
	LDA #P_DLOGA2
	STA GX_CCOL
	
	LDY #00
	LDA (OFFSET2),Y
	JSR _DRWACOD
	
	JSR _DRWSPAC
	
	LDY #$01
	LDA (OFFSET2),Y
	CMP #$FF
	BEQ @ISSUE
	JSR _DDRWISS
@ISSUE
	
	LDA FVAR6
	STA GX_CROW
	LDA #P_DLOGA3
	STA GX_CCOL
	
	LDY #$03
	LDA (OFFSET2),Y
	JSR _DRWSIGN
	
	JSR _DRWSPAC
	
	LDY #$02
	LDA (OFFSET2),Y
	STA V_PARTY
	CMP #$FF
	BEQ @OPPONT
	JSR _DRWPLYR
@OPPONT
	
	INC FVAR6
	LDA FVAR6
	STA GX_CROW
	LDA #P_DLOGA4
	STA GX_CCOL
	
	LDY #$04
	LDA (OFFSET2),Y
	CMP #$FF
	BEQ @LOOPDONE
	
	LDX V_PARTY
	JSR _DRWPN1
	
	JSR _DRWSPAC
	
	LDY #$04
	LDA (OFFSET2),Y
	JSR _DRWRCOD
	
	JSR _DRWSPAC
	
	LDY #$05
	LDA (OFFSET2),Y
	CMP #$FF
	BEQ @RISSUE
	JSR _DDRWISS
@RISSUE
	LDA FVAR6
	STA GX_CROW
	LDA #P_DLOGA5
	STA GX_CCOL
	
	LDY #$06
	LDA (OFFSET2),Y
	JSR _DRWSIGN
@LOOPDONE
	
	INC FVAR6
	INC FSTATE
	LDA FSTATE
	CMP #$04
	BEQ @DONE
	JMP @ACTLOOP
@DONE
	JSR _FTC
	RTS
	
;debate_ai_action_select()
_DACTAI
	;JSR _DDEBUGA
	;RTS
	LDX DPARTY
	LDA V_AI,X
	CMP #$02
	BCS @NOTEASY
	
	LDY #00
	LDA #DBPIVOT
	STA (OFFSET2),Y
	LDY #01
	LDA #$06
	JSR _RNG
	STA (OFFSET2),Y
	RTS
@NOTEASY

	LDA #$02
	JSR _RNG
	BEQ @MORALIZE
	
	LDX #00
@CHECKPEN
	LDA V_DPOBSC,X
	BEQ @SEEN
	CPX DPARTY
	BEQ @SEEN
	
	TXA
	LDY #02
	STA (OFFSET2),Y
	LDA #DBPERSNL
	JMP @DONE
@SEEN
	INX
	CPX S_PLAYER
	BNE @CHECKPEN
@MORALIZE
	
	JSR _DAIGCS
	STX FX1
	LDY DPARTY
	JSR _DBICAI
	BEQ @DIFFER
	
	LDX FX1
	JSR _DAIGOPP
	TAY
	STY FY1
	JSR _DBICAI
	BNE @CHALLENGE
	
	LDA FX1
	LDY #01
	STA (OFFSET2),Y
	LDA FY1
	LDY #$02
	STA (OFFSET2),Y
	LDA #DBMORAL
	JMP @DONE
@DIFFER
	JSR _DAIGCS
	STX FX1
	JSR _DAIGOPP
	TAY
	STY FY1
	JSR _DBICAI
	BNE @CHALLENGE
	
	LDA FX1
	LDY #01
	STA (OFFSET2),Y
	LDA FY1
	LDY #$02
	STA (OFFSET2),Y
	LDA #DBDIFFER
	JMP @DONE
@CHALLENGE
	JSR _DAIGCS
	STX FX1
	LDY DPARTY
	JSR _DBAIXN
	BNE @ANSWER
	LDX FX1
	LDY DPARTY
	JSR _DBICAI
	BNE @ANSWER
	
	LDA FX1
	LDY #01
	STA (OFFSET2),Y
	LDA #DBCHALL
	JMP @DONE
@ANSWER
	JSR _DAIGCS
	LDY DPARTY
	JSR _DBICAI
	BEQ @PIVOT
	
	LDA FX1
	LDY #01
	STA (OFFSET2),Y
	LDA #DBANSWER
	JMP @DONE
@PIVOT
	JSR _DAIGNS
	TXA
	LDY #01
	STA (OFFSET2),Y
	LDA #DBPIVOT
	JMP @DONE
@DONE
	LDY #00
	STA (OFFSET2),Y
	RTS

;clears survey result text
_DBSURVCLR
	LDA #C_BLUE
	STA GX_DCOL
	+__COORD P_DCONFR,P_DCONFC
	LDA #19
	STA T_FILLX+2
	+__LAB2XY T_FILLX
	JSR _GX_STR
	RTS
