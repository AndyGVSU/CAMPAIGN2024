;cgame.asm
;CAMP11 
;main game loop

_START 
	LDA #$01
	STA GX_UCOL
	
	;JSR _COPYDAT
	JSR _SPRINIT
	JSR _CLRFAC
@DEBUG
	LDA #00
	STA FARG2
	STA FARG4
	LDA #$FE ;1st lower
	STA FARG1
	LDA #$FF ;upper
	STA FARG3
	LDA #$FD ;2nd lower
	STA FVAR3
	
	JSR _MARGFMT
	JSR _SFXINIT
	
	JSR _RNGINIT
	LDA #$80
	JSR _RNG ;seed
	
	JSR _GX_INIT
	JSR _GX_CLRS
	JSR _PRETITL
	JSR _SETUP
	JSR _CLR_T2
	JSR _CLRSCHD
	JSR _CANDSEL

	LDA S_GMMODE
	BEQ @SKIPR
	JSR _INITCPI
@SKIPR 

	JSR _GX_CLRS
	JSR _DRWBORD
	
	JSR _UNDCP ;
	JSR _SAVEUND ;

	JSR _PRECAMP
	JSR _UNDCP
	JSR _SAVEUND ;
	JSR _SAVEHIS ;
	LDA #00
	STA V_REDRW1

	JSR _GAME
	JSR _PSTCAMP
	JSR _SAVEHIS
	JSR _FINALCP

	LDA #00
	STA V_SUMFH
	LDA #01
	STA S_DRWUND

	LDA S_QUICKG
	BNE @SKIP
	JSR _RESULTS
@SKIP
	JSR _MAPCOL
	JSR _ENDMENU

	RTS 



;pretitle() 
;clears vars
_PRETITL 
	+__LAB2O BASE2
	LDY #00
@INCLOOP LDA #00
@LOOP STA (OFFSET),Y
	INY 
	BNE @LOOP
	INC OFFSET+1
	LDA OFFSET+1
	CMP #>BASE4
	BNE @INCLOOP

	LDA #00
	STA SAVESEL
	STA V_OUTOFM
	STA V_REDRW1
	STA V_REDRW2
	STA V_PARTY
	STA S_QUICKG
	STA S_CLASSC
	STA S_BLIND
	STA S_CUSTOM
	STA GX_PCOL
	STA GX_BCOL
	STA GX_X
	STA GX_Y
	STA GX_XO
	STA GX_XP
	STA GX_XB
	STA GX_YO
	STA GX_LX1+1
	STA GX_LX2+1
	STA MAP_COL
	STA MAP_ROW
	STA MAP_HELD
	STA MAP_RES
	LDX #03
@CLRLOOP 
	STA V_AI,X
	DEX 
	BPL @CLRLOOP

	LDX #01
@REVLOOP 
	STA V_REVERT,X
	INX 
	CPX #STATE_C
	BNE @REVLOOP

	LDX #00
@MEMLOOP
	STA V_AIH2MEM,X
	INX
	BNE @MEMLOOP

	JSR _MAXR
	RTS 

;setup() 
;pre-game setup routines
_SETUP 
	LDA #$40
	ORA KEYREP

	AND #$7F
	STA KEYREP ;turn key repeating off

	JSR _COPYCOL
	JSR _CHARSET
	LDA #02
	STA S_PLAYER ;set up for title
	JSR _SETUPPN
	JSR _INITCP ;set up cp for title map
	JSR _ISSUES
	JSR _INITEC
	JSR _MAPCMB1

	JSR _DRW_T2
	JSR _DRWTITLE
	JSR _ATTRACT
	JSR _TITLE

	JSR _INITCP ;again for >2 players
	LDA S_PLAYER
	CMP #$03
	BNE @SKIP3P
	JSR _SETUP3P
@SKIP3P 
	JSR _CONVCHR
	
@AVGLEAN
	JSR _REGLEAN
	INC V_PARTY
	LDA V_PARTY
	CMP S_PLAYER
	BNE @AVGLEAN

	LDA #00
	STA V_PARTY

	LDA #00
	STA V_WEEK

	JSR _MAPCMB2
	RTS 

;game() 
;main campaigning loop
;LOCAL: FVAR4
_GAME 
	LDA #P_MENUR3
	STA SAVESEL ;action menu selection reset
	LDA V_PARTY
	BNE @SKIPDRW

	LDA V_WEEK
	BEQ @SKPREV
	
	LDA S_CLASSC
	BNE @NOREVRT
	JSR _CALCREV
@NOREVRT
;; 
	JSR _SAVEHIS
	JSR _SAVEUND

	LDA #STATE_C
	STA FARG5
	LDA #00
	STA S_DRWUND
	JSR _OFFSHIS
;;
@SKPREV 
	INC V_WEEK
	LDA V_WEEK
	CMP #$0A
	BNE @SKIPW

	RTS 
@SKIPW 
	LDA S_BLIND
	BEQ @VISMAP
	JSR _FILMASK
@VISMAP
	JSR _MAPCMB2
	
	LDA S_BLIND
	BNE @NOEC
	JSR _POPCOM1
@NOEC
	;redraw map/ec only at start of week
@SKIPDRW 

	JSR _DCHECK

	LDA C_MONEY ;staff out check
	CMP #$0A
	BCC @NOMONEY
	LDA #00
	BEQ @MONEY
@NOMONEY 
	LDA #$01
@MONEY 
	STA V_OUTOFM

	LDA V_WEEK ;last week check
	CMP #$09
	BNE @FINWEEK
	LDA #01
	STA S_MBLANK
@FINWEEK 
	
	JSR _AICLRPL ;reset polled/censused regions

	LDA #$01
	STA V_REDRW2
	LDA C_IREG
	STA C_CREG
	LDA #$00
	STA V_MUSFLAG
_GAME2 ;redraw candidate info
	LDA C_VBONUS
	STA V_VBONUS

	JSR _OFFSHIS
	JSR _DRWCAND
	
	LDA V_MUSFLAG
	BNE _GAME21
	LDA S_QUICKG
	BNE _GAME21
	JSR _DCLRMR
	JSR _CLRSCHD
	JSR _DUPNEXT
	JSR _MUSIC
	LDA #$01
	STA V_MUSFLAG
_GAME21 ;redraw schedule
	JSR _SCHCLR
	JSR _DRWWSCH
_GAME3 ;draw right menu, select action
	JSR _DRWSTAF
	JSR _DRWMENR
_GAME4 
	JSR _AI
	BEQ @SKIPENT
	JMP @NOCONF
@SKIPENT 

@SELECT 
	LDX #P_MENUR3
	LDY #P_MENUR4
	LDA SAVESEL
	STA FRET1
	JSR _RSEL6 ;start at savesel
	TAX 
	STA FVAR4
	CLC 
	ADC #P_MENUR3

	STA SAVESEL

	LDA FVAR4
@VISIT 
	BNE @TVADS
	JSR _CLRMENR
	+__LAB2XY T_VISIT
	+__COORD P_VISITR,P_VISITC
	JSR _GX_STR

	LDA C_CREG
	JSR _DRWREGS
@VISEL 
	LDA C_SCHEDC
	CMP #$07
	BNE @VICONT
	JMP @FTC
@VICONT 

	LDX C_CREG
	LDA D_REGC-1,X
	CLC 
	ADC #P_VISITR
	TAY 
	INY 
	LDX #P_VISITR
	JSR _RSELECT
	BNE @VIS2
	JSR _MAP
	;view map
	JMP @VISEL
@VIS2 CMP #$01
	BNE @VISTATE
	JMP _GAME3 ;menu
@VISTATE 
	SEC 
	SBC #$02
	LDX C_CREG
	CLC 
	ADC D_REGLIM-1,X
	STA FARG1

	LDA FVAR4
	JSR _SCHADD
	JSR _DRWVBON
	JMP @VISEL
@TVADS DEX
	BNE @FUNDR
	JMP @ENTER
@FUNDR DEX
	BNE @REST
	JMP @ENTER
@REST DEX
	BNE @MAP
	JMP @ENTER
@MAP DEX
	BNE @POLL


	JSR _MAP
	JMP _GAME4
@POLL 
	DEX
	BNE @CENSUS

	LDA V_OUTOFM
	BNE @POLLDON

	LDX C_CREG
	LDA V_AIPOLL,X
	CMP #$01
	BCS @REPEATP
	
	LDA C_MONEY
	CMP #$0A
	BCC @POLLDON
	SEC 
	SBC #$02
	STA C_MONEY
	
	LDA S_BLIND
	BEQ @EXCOST
	LDA C_MONEY
	SEC
	SBC #$03
	STA C_MONEY
@EXCOST
@REPEATP
	LDX C_CREG
	LDA V_AIPOLL,X
	BNE @NOHIGHER
	LDA #$01
	STA V_AIPOLL,X
@NOHIGHER
	LDA #$00
	STA S_DRWUND
@GPOLL 
	LDA #$01
	STA V_SUMFH ;sum from history ON
	
	JSR _DRWPOLL
	LDA #00
	STA V_REDRW1
	STA S_DRWUND
@POLLDON 
	JMP _GAME2

@CENSUS 
	DEX
	BNE @REPLAN
	
	LDX C_CREG
	LDA V_AIPOLL,X
	CMP #$02
	BCS @REPEAT
	
	LDA V_OUTOFM
	BNE @POLLDON
	LDA S_BLIND
	BNE @POLLDON
	LDA S_CLASSC
	BNE @POLLDON
	
	LDY C_CREG
	LDA C_MONEY
	CMP #$0A
	BCC @POLLDON
	SEC 
	SBC D_CENSUS-1,Y
	STA C_MONEY
@REPEAT
	LDX C_CREG
	LDA #$02
	STA V_AIPOLL,X

	JSR _OFFSHIS
	LDA #$01
	STA S_DRWUND
	JSR _POPCOM1
	
	LDX C_CREG
	JMP @GPOLL
@REPLAN 
	DEX 
	BNE @TRAVEL

	JSR _FTC
	BNE @NORP
	JMP _GAME2
@NORP 
	JMP @SELECT


@TRAVEL 
	JSR _DRWREGM
	LDX #$04
	LDY #$0D
	JSR _RSELECT
	TAX 
	CPX #$09
	BNE @SKIPMEN
	JMP _GAME3
@SKIPMEN 
	INX 
	TXA 
	STA C_CREG
	JMP _GAME3
@ENTER 
	LDA FVAR4
	JSR _SCHADD

	LDA C_SCHEDC
	CMP #$07
	BEQ @FTC
	JMP @SELECT
@FTC
	JSR _FTC
	BEQ @CONFIRM
	JMP _GAME2
@CONFIRM 
	LDA V_VBONUS
	STA C_VBONUS
	LDA C_CREG
	STA C_IREG

	JSR _SCHEXE
	JSR _SCHSAV
	JSR _CANDSWAP
	JMP _GAME
@NOCONF ;for ai
	LDA S_QUICKG
	BNE @CONFIRM
	JSR _FTC
	JMP @CONFIRM

;history_offset() 
_OFFSHIS 
	LDA #>V_HIST
	CLC 
	ADC V_WEEK
	STA HS_ADDR+1
	DEC HS_ADDR+1 ;use last week's history
	LDA #00
	STA HS_ADDR
	RTS 

_CLRTITLE
	LDA #30
	STA GX_LX1
	LDA #40
	STA GX_LX2
	LDA #00
	STA GX_LY1
	LDA #18
	STA GX_LY2
	JSR _GXRECTC

_DRWTITLE
	LDA #C_DRED
	STA GX_DCOL
	+__COORD P_TOP,P_TITLEC

	+__LAB2XY T_TITLE
	JSR _GX_STR
	RTS

_DRWTITLE2
	LDA #C_DRED
	STA GX_DCOL
	+__COORD P_TOP,P_TITLEC

	+__LAB2XY T_TITLEX
	JSR _GX_STR
	RTS

;title() 
;draws the title settings menu
;processes results
_TITLE 
@SETTING
	JSR _CLRTITLE
	JSR _DRWTITLE
	LDX #$03
	LDY #$06
	JSR _RSELECT

	TAX 
	LDA D_SETPLY,X
	STA S_PLAYER
	STA S_PLAY1L
	STA S_PLAY1M
	DEC S_PLAY1L
	INC S_PLAY1M

	LDA #$00
	STA S_3PMODE
	CPX #$02
	BNE @SKIP3P2
	LDA #$01
	STA S_3PMODE
@SKIP3P2 

	LDX #$08
	LDY #$09
	JSR _RSELECT
	STA S_GMMODE

	LDX #$0B
	LDY #$0C
	JSR _RSELECT
	STA S_EQCER

	LDX #$0E
	LDY #$0F
	JSR _RSELECT
	STA S_DEBTON

	LDX #$11
	LDY #$12
	JSR _RSELECT
	BEQ @NOEXTRA
	JSR _CLRMENR
	JSR _DRWTITLE2
	
	LDX #$03
	LDY #$04
	JSR _RSELECT
	STA S_CLASSC
	LDX #$06
	LDY #$07
	JSR _RSELECT
	STA S_CUSTOM
	LDX #$09
	LDY #$0A
	JSR _RSELECT
	STA S_BLIND
	LDX #$0C
	LDY #$0D
	JSR _RSELECT
	STA S_QUICKG
	
@NOEXTRA
	JSR _FTC
	BEQ @CONF
	JMP @SETTING
@CONF
	RTS 

_ISSUES 
	+__LAB2A2 V_ISSUE,D_ISSUE
	LDA #00
	STA FVAR3 ;compressed 1
	STA FVAR4 ;..2
	STA FVAR5 ;..3
	STA FARG5

@TOP 
	JSR _ISSUES2

	LDA FARG1
	CLC 
	ADC #$08
	STA FARG1
	BCC @CARRY
	INC FARG2

@CARRY 
	LDA FARG3
	CLC 
	ADC #$03
	STA FARG3
	BCC @CARRY2
	INC FARG4
@CARRY2 
	INC FARG5
	LDA FARG5
	CMP #STATE_C
	BNE @TOP
	RTS 

;3-hex decompress (A=VAL,first bit in arg5)
_ISSUES2 LDY #00
@3LOOP LDA (FARG3),Y
	STA FVAR3,Y
	INY 
	CPY #$03
	BNE @3LOOP

	LDY #$08
@8LOOP LDX #$03
	LDA #00
@RLOOP ROR FVAR3
	ROR FVAR3+1
	ROR FVAR3+2
	ROR 
	DEX 
	BNE @RLOOP

	LDX #05
@VALOOP LSR
	DEX 
	BNE @VALOOP

	DEY 
	STA (FARG1),Y
	TYA 
	BNE @8LOOP
	RTS 

;end_menu() 
_ENDMENU 
	JSR _CLRBL
	JSR _MAPCMB1
	JSR _CPOFFR
	JSR _POPSUM1
	LDA #STATE_C
	STA FARG5
	JSR _DRWPOP
	JSR _CLRSCHD
	JSR _DRWWINE
	+__COORD P_ENDMNR,P_ENDMNC
	+__LAB2XY T_ENDMNU
	JSR _GX_STR
	LDX #$11
	LDY #$14
	JSR _RSELECT
	TAX
	
	BNE @DETAILED
	;RESULTS 
	LDA #01
	STA S_DRWUND
	JSR _RESULTS
	JMP _ENDMENU
@DETAILED 
	DEX 
	BNE @PLAYERS
	JSR _MAP
	LDA MAP_RES
	BEQ @SKIP
	CMP #STATE_C
	BCS @SKIP

	STA FSTATE
	JSR _DETAIL
	JSR _FTC
	JSR _GX_CLRS
@SKIP 
	JMP _ENDMENU
@PLAYERS
	DEX
	BNE @ACTLOG
	JSR _CLRBL
	JSR _CANDLOOP
	JMP _ENDMENU
@ACTLOG
	JSR _ACTLOG
	JMP _ENDMENU
	
;final_cp_control() 
;sets final control values, breaks ties
_FINALCP 
	JSR _MAXR
	LDA #01
	STA S_DRWUND
	JSR _GAINSUM
;JSR _POPSUM1
	JSR _CPOFFR
	LDA #$01
	STA FSTATE
@SLOOP 
	JSR _CPTOMAX
	JSR _MAX2
	BNE @SKIPTIE
	JSR _TIE
	PHA 
	LDX FSTATE
	LDA FRET3
	STA V_TIERES,X
	PLA 


	JMP @SKIPDEC
@SKIPTIE 
	TAX 
	DEX 
	TXA 
@SKIPDEC 
	LDX FSTATE
	STA V_CTRL,X

	JSR _CPOFFI
	INC FSTATE
	LDA FSTATE
	CMP #STATE_C
	BNE @SLOOP
	RTS 

;results() 
;goes over regions one at a time
;LOCAL: FVAR4
_RESULTS
	JSR _GX_CLRS
	JSR _FILMASK
	JSR _MAPCOL
	JSR _MAPCMB1

	LDA #$01
	STA C_CREG ;region counter
@REGLOOP 
	JSR _CLRMENR
	LDX C_CREG
	LDY D_REGLIM-1,X
	LDA D_REGLIM,X
	STA FVAR4
	STA FARG5
	LDA #00
@CLRLOOP 
	STA V_COLMSK,Y ;clear mask
	INY 
	CPY FVAR4
	BNE @CLRLOOP

	JSR _MAPCOL
	JSR _MAPCMB1
	LDA C_CREG
	JSR _DRWREGS
	JSR _DRWWIN
	JSR _DRWPOP
	LDX C_CREG
	JSR _DRWPOLL

	INC C_CREG
	LDA C_CREG
	CMP #$0A
	BNE @REGLOOP

	RTS 
	
;attract_mode()
_ATTRACT
	LDX #00
@LOOP1
	LDA #C_DRED
	STA $DAAE+0,X
	LDA #C_WHITE
	STA $DAAE+1,X
	LDA #C_BLUE
	STA $DAAE+2,X
	INX
	INX
	INX
	CPX #21
	BNE @LOOP1
	
@CYCLE
	LDX #20
	
	LDA $DAAE+20
	STA FVAR3 ;end
@LOOP
	LDA $DAAE-1,X
	STA $DAAE,X

	DEX
	CPX #00
	BNE @LOOP
	
	LDA FVAR3
	STA $DAAE+0
	
	LDY #00
	LDX #00
@WAIT
	INX
	BNE @WAIT
	INY
	CPY #$30
	BNE @WAIT
	
	JSR _SCNKEY
	JSR _GETIN
	CMP #$00
	BEQ @CYCLE
	
	LDA #$00
	STA FVAR3
	RTS
	
	
	