;cai.asm
;CAMP05 
;AI routines

;main check routine
;ignores if human player, enters schedule if AI
;returns A = ai schedule was entered
_AI 
	LDX V_PARTY
	LDA V_AI,X
	BEQ @RTS
	CMP #$03
	BEQ @HARD2
	CMP #$02
	BEQ @HARD
	JSR _EASY
	JMP @RTSAI
@HARD2 
	JSR _HARD2
	JMP @RTSAI
@HARD 
	JSR _HARD
@RTSAI 
	LDA #01
	RTS 
@RTS 
	RTS 

;easy_ai() 
_EASY 
	;set random region
	LDA #$09
	JSR _RNG
	CLC 
	ADC #$01
	STA C_CREG

	LDA #$03
	JSR _SCHADD
	LDA #$03
	JSR _SCHADD
	;rest twice
	LDA #$02
	JSR _SCHADD
	LDA #$02
	JSR _SCHADD
	;fundraise twice
@VISIT 
	LDX C_CREG
	DEX 
	LDA D_REGC,X
	JSR _RNG
	LDX C_CREG
	CLC 
	ADC D_REGLIM-1,X
	STA FARG1
	LDA #$00
	JSR _SCHADD

	LDA C_SCHEDC


	CMP #$06
	BNE @VISIT
	;campaign in two random states
	LDA #$01
	JSR _SCHADD
	;tv ads in region
	LDA #01
	RTS 

;hard_ai() 
_HARD 
	JSR _AICLRP
	JSR _AIHLIST ;generate priority list
@RECALC 
	JSR _SCHCLR

	LDA #00
	STA FAI
	STA FAITV ;tv ads limit
	;week 9 guarantees TV ADS
	LDA V_WEEK
	CMP #$09
	BNE @GARANTV
	LDX #$07
@WEEK9LP 
	LDA V_PRIOR2,X
	BPL @NOTTV
	STA V_PRIOR2+6 ;last action; if surplus, kept
	JMP @LOOP1
@NOTTV 
	INX 
	CPX #$1D
	BNE @WEEK9LP
@GARANTV 
	;do aux rest/fundr on even weeks
	LDA V_WEEK
	AND #$01
	BNE @ODD
	JSR _AIHAUX
@ODD 

@LOOP1 ;fill schedule with priority
	LDA V_CPGPTR
	STA FAIPTR

	JSR _LDAPCFC ;avoid out of money
	CMP #$14 ;i.e. < 20 funds
	BCS @OUTOFM
	LDA V_WEEK ;BUT don't if week 9
	CMP #$09
	BNE @FUNDR
@OUTOFM 
	LDX FAI
	LDA V_PRIOR2,X
	BEQ @REST
	CMP #$FF

	BEQ @FUNDR
	LDA V_PRIOR2,X
	BMI @TVADS
	STA FARG1
	LDA V_VBONUS
	AND #$7F
	CMP FARG1
	BNE @NOPENAL
	LDA V_VBONUS
	BPL @NOPENAL ;if VISIT penalty
	LDA V_PRIOR2+1,X
	STA V_PRIOR2,X
@NOPENAL 
	LDA #00
	JSR _SCHADD
	JMP @INC
@TVADS 
	AND #$0F
	STA C_CREG

	LDA V_WEEK
	AND #$01
	BEQ @CUTTV

	INC FAITV
	LDA FAITV
	CMP #03 ;no more than 2 TV ADS
	BCC @TVLIMIT
@CUTTV 
	JSR _AIHCUT
	JMP @INC
@TVLIMIT 
	LDA #01
	JSR _SCHADD
	JMP @INC
@FUNDR 
	LDA #$02
	JSR _SCHADD
	JMP @INC
@REST 
	LDA #$03
	JSR _SCHADD
	JMP @INC
@INC 
	INC FAI
	JSR _SCHFULL
	BNE @LOOP1
@DONE 
	RTS 

;hard_ai() 
_HARD2
	+__LAB2O V_AIH2MEM
	LDX V_PARTY
	LDY #AISTATE
	JSR _OFFSET
	+__O2O2

	JSR _AICLRP
	JSR _AIHLIST2 ;generate priority list
	JSR _AICENS2
	JSR _AIHLIST2 ;recalculate with census
	JSR _SCHCLR

	LDA #$00
	STA FARG5 ;max TV priority
	STA FAIPTR

@RECALC 
	LDA #00
	STA FAI
	STA FAITV ;tv ads limit
	;week 9 guarantees TV ADS
	; LDA V_WEEK
	; CMP #$0A ;REPLACE?
	; BNE @GARANTV
	; LDX #$07
; @WEEK9LP 
	; LDA V_PRIOR2,X
	; BPL @NOTTV
	; STA V_PRIOR2+6 ;last action; if surplus, kept
	; JMP @LOOP1
; @NOTTV 
	; INX 
	; CPX #AISTATE
	; BNE @WEEK9LP
; @GARANTV 
	;do aux rest/fundr on even weeks
	LDA V_WEEK
	AND #$01
	BNE @ODD
	JSR _AIHAUX
@ODD

@LOOP1 ;fill schedule with priority
	LDA V_CPGPTR
	STA FAIPTR
	
	JSR _LDAPCFC ;avoid low funds
	CMP #20
	BCC @FUNDR
	; BCS @OUTOFM
	; LDA V_WEEK ;BUT don't if week 9
	; CMP #$09
	; BNE @FUNDR
; @OUTOFM 
	JSR _LDAPCHC
	CMP #20
	BCC @REST
	; BCS @OUTOFH
	; LDA V_WEEK ;BUT don't if week 9
	; CMP #$09
	; BNE @REST
; @OUTOFH

	LDX FAI
	LDA V_PRIOR2,X
	;BEQ @REST
	;CMP #$FF
	;BEQ @FUNDR
	
	LDA V_PRIOR,X
	BNE @CONTINU
	JMP @INC
@CONTINU
	
	LDA V_PRIOR2,X
	BEQ @INC
	BMI @TVADS
	STA FARG1
	LDA V_VBONUS
	AND #$7F
	CMP FARG1
	BNE @NOPENAL
	LDA V_VBONUS
	BPL @NOPENAL ;if VISIT penalty
	LDA V_PRIOR2+1,X
	STA V_PRIOR2,X
@NOPENAL 
	LDA #00
	JSR _SCHADD
	JMP @INC
@TVADS 
	AND #$0F
	STA C_CREG

	LDA V_WEEK
	AND #$01 ;no TV ADS on even weeks
	BNE @ODDWEEK
	JMP @INC
@ODDWEEK

	INC FAITV
	LDA FAITV
	CMP #03 ;no more than 2 TV ADS
	BCC @TVLIMIT
	JMP @INC
;@CUTTV 
;	JSR _AIHCUT
;	JMP @INC
@TVLIMIT 
	LDA #01
	JSR _SCHADD
	LDA V_WARN
	BEQ @TVOK
	DEC C_SCHEDC
@TVOK
	JMP @INC
@FUNDR 
	LDA #$02
	JSR _SCHADD
	JMP @INC
@REST 
	LDA #$03
	JSR _SCHADD
	JMP @INC
@INC 
	INC FAI
	;JSR _HARD22
	JSR _SCHFULL
	BEQ @DONE
	JMP @LOOP1
@DONE 
	RTS 
;week 9 TV ADS dump
; _HARD22
	; LDA C_SCHEDC
	; CMP #$05
	; BNE @RTS
	
	; LDA V_WEEK
	; CMP #$09
	; BNE @RTS
	
	; LDX #00
	; STX FAIMUL ;region
; @REGLOOP
	; LDX FAIMUL
	; LDA V_AIPOLL,X
	; BEQ @NOPOLL
	
	; JSR _LDAPCFC ;avoid excessive TV ADS
	; CMP #$14 ;i.e. < 20 funds
	; BCC @NOPOLL
	
	; LDX FAIMUL
	; STX C_CREG
	; INC C_CREG
	; LDA #01
	; JSR _SCHADD
	
; @NOPOLL
	; INC FAIMUL
	; LDX FAIMUL
	; CPX #$0A
	; BNE @REGLOOP
; @RTS
	; RTS

;ai_hard_shift_schedule() 
;shifts schedule down 1 from current point
_AIHSHFT 
	LDX #$1D
@LOOP 
	LDA V_PRIOR2-1,X
	STA V_PRIOR2,X


	DEX 
	CPX C_SCHEDC
	BNE @LOOP
	RTS 

;ai_hard_cut_schedule() 
;removes the next-queued action from the schedule
_AIHCUT 
	LDX C_SCHEDC
	LDA V_PRIOR2
	BEQ @RTS ;no more to cut
@LOOP 
	LDA V_PRIOR2+1,X
	STA V_PRIOR2,X
	INX 
	CPX #$1D
	BNE @LOOP
@RTS 
	RTS 

;clear_priority_values()
_AICLRP 
	LDA #00
	TAX 
@CLRLOOP ;for second pass ONLY
	STA V_PRIOR,X
	INX 
	CPX #$1D
	BNE @CLRLOOP
	JSR _AICLRPL

	RTS 

;auxiliary_rest() 
;does REST/FUNDRAISE conditionally
_AIHAUX 

	JSR _LDAPCF
	CMP #128 ;1 if FUNDS < 128
	BCS @SECOND

	LDA #02
	JSR _SCHADD

	JSR _LDAPCF
	CMP #100
	BCS @SECOND

	LDA #02
	JSR _SCHADD

	JSR _LDAPCF
	CMP #80
	BCS @SECOND

	LDA #02
	JSR _SCHADD
@SECOND 
	JSR _LDAPCH
	CMP #128
	BCS @RTS
	
	LDA #03
	JSR _SCHADD

	JSR _LDAPCH
	CMP #128
	BCS @RTS
	
	LDA #03
	JSR _SCHADD
@RTS 
	RTS 

;schedule_full_check 
_SCHFULL 
	LDA C_SCHEDC
	CMP #$07
	RTS 
	
;calc_priority_list() 
_AIHLIST ;set up index list
	LDA #00
	TAX 
	STA V_PRIOR2+29

	TAY 
	LDX #01
	STA V_AIPOLC
@SLOOP 
	LDA V_EC,X
	CMP #$0A
	BCC @SKIPSTA
	TXA 
	STA V_PRIOR2,Y
	TAX 
	INY 
@SKIPSTA 
	INX 
	CPX #STATE_C
	BNE @SLOOP

	LDX #01
@TVLOOP 
	TXA 
	ORA #$F0


	STA V_PRIOR2,Y
	INX 
	INY 
	CPX #$0A
	BNE @TVLOOP

@CALC2 
	LDA #00
	STA FAI
@CALCLP 
	;single/group state index
	LDX FAI
	LDA V_PRIOR2,X
	BEQ @CLCINC ;ignore if state index 0
	BMI @GROUP
	JSR _AIHONE
	JMP @CLCINC
@GROUP 
	AND #$0F
	JSR _AIHMANY
@CLCINC 
	LDX FAI
	STA V_PRIOR,X

	INC FAI
	LDA FAI
	CMP #$1F
	BNE @CALCLP

	JSR _AISORT
	;skip polling WEEK < 3
	LDA V_WEEK
	CMP #$03
	BCC @POLLED
	;if no money, no polls
	LDA V_OUTOFM
	BNE @POLLED
	;if poll count > 0, no further polls
	LDA V_AIPOLC
	BNE @POLLED
	LDY #00
@POLLOOP 
	LDA V_WEEK
	CMP #$09
	BNE @BLITZ
	INC V_AIPOLC
	LDX #01
@BLOOP ;census every region
	INC V_AIPOLL,X
	INC V_AIPOLL,X
	JSR _AICENS
	INX 
	CPX #$0A

	BNE @BLOOP
	JMP @DONEPOLL
@BLITZ 
	LDA V_PRIOR2,Y
	BMI @TVADREG
	JSR _STATEGR
	BNE @GOTREG
@TVADREG 
	AND #$0F
	TAX 
@GOTREG 
	LDA V_AIPOLL,X
	BNE @OLDREG
	INC V_AIPOLL,X
	LDA V_WEEK
	CMP #$05
	BCC @NOCENS ;census cost
	INC V_AIPOLL,X
	JSR _AICENS
	JMP @CENS
@NOCENS ;poll cost
	LDA V_FHCOST+1
	SEC 
	SBC #$02
	STA V_FHCOST+1
@CENS 
	INC V_AIPOLC
@OLDREG 
	INY 
	LDA V_AIPOLC
	CMP #$02
	BNE @POLLOOP

@DONEPOLL 
	JSR _AICLRP
	JMP @CALC2
@POLLED 
	RTS 

;calc_priority_list() 
_AIHLIST2 ;set up index list
	LDA #01
	STA FARG1
	JSR _CPOFFS
	LDA #00
	TAY
	STA V_PRIOR2+29
	LDX #01
	
@SLOOP
	LDA V_EC,X
	CMP #$0A
	BCC @SKIPSTA
	
	LDA V_PARTY
	CMP #$02
	BNE @INDFILT
	LDA S_PLAYER
	CMP #$03
	BNE @INDFILT
	CPX V_INDSTA
	BEQ @SKIPSTA
	CPX V_INDSTA+1
	BEQ @SKIPSTA
@INDFILT
	TXA 
	STA V_PRIOR2,Y
	TAX
	
	TYA
	PHA
	LDA V_PARTY
	CLC
	ADC #UND_OF1M
	TAY
	LDA (CP_ADDR),Y
	STA FVAR1
	PLA
	TAY
	LDA FVAR1
	STA V_PRIOR,Y
	
	INY 
@SKIPSTA 
	JSR _CPOFFI
	INX 
	CPX #STATE_C
	BNE @SLOOP
	
	STY FY1
	
	+__LAB2O V_AIH2REG
	LDX V_PARTY
	LDY #$09
	JSR _OFFSET
	
	LDY #01
@REGLOOP
	TYA
	ORA #$F0
	LDX FY1
	STA V_PRIOR2,X
	DEY
	LDA (OFFSET),Y
	INY
	STA V_PRIOR,X
	
	INC FY1
	INY
	CPY #$0A
	BNE @REGLOOP
	
	JSR _AISORT ;sort by STATE LEAN, then by EC
	JSR _AICSORT
	
	LDX #00
@TOVISIT
	STX FAI
	LDA V_PRIOR2,X
	BEQ @NEXTST
	BMI @TVADS
	STA FSTATE
	TXA
	TAY
	LDA (OFFSET2),Y ;if state is forgotten, skip
	BNE @FORGOT
	JSR _AIHLIST23
	JMP @VISDONE
@FORGOT
	LDA #$00
@VISDONE
	LDX FAI
	STA V_PRIOR,X
	JMP @NEXTST
@TVADS
	JSR _AIHLIST22
	JMP @VISDONE
@NEXTST
	LDX FAI
	INX
	CPX #AISTATE
	BNE @TOVISIT
	
	RTS
;calculate TV ADS to-visit (A = region code #$Fx)
_AIHLIST22
	AND #$0F
	TAX
	STX FVAR1 ;region
	LDA D_REGLIM-1,X
	STA FVAR5 ;lower limit
	LDA D_REGLIM,X
	STA FVAR6 ;upper limit
	
	LDA #$00
	STA FVAR2 ;count
	
@STLOOP
	LDA FVAR5
	STA FSTATE
	JSR _AIHLIST23
	BEQ @FALSE
	INC FVAR2
@FALSE
	INC FVAR5
	LDA FVAR5
	CMP FVAR6
	BNE @STLOOP
	
	LDX FVAR1
	LDA D_REGC-1,X
	LSR
	CLC
	ADC #$01
	CMP FVAR2 ;floor(half) of states are to-visit 
	BCS @RETFAL
	LDA #$01
	RTS
@RETFAL
	LDA #$00
	RTS

;calculate single-state to-visit
;LOCAL: FAI = priority index, FSTATE = priority state index
_AIHLIST23
	LDA FSTATE
	JSR _STATEGR
	LDA V_AIPOLL-1,X
	CMP #$02
	BEQ @CENSUS
	
	JSR _MULTNP
	TXA
	CMP #$02
	BEQ @FALSE
@TRUE
	LDA #$01
	JMP @VISDONE
@FALSE
	LDA #$00
@VISDONE
	RTS
@CENSUS
	LDA FSTATE
	STA FARG1
	JSR _CPOFFS
	JSR _MULTUCP
	CPX #$01
	BEQ @CONTIN
	
	JSR _MULTSAFE
	BNE @FORGET
	
	LDA #$00
	STA V_SUMFH
	JSR _POPSUMR
	JSR _TMARGIN2
	LDA #$00
	STA FY1 ;reset zero-priority flag
	JSR _MULTNUN
	LDA FY1
	BNE @FORGET
	CPX #$01
	BEQ @TRUE
@FORGET
	LDY FAI
	LDA #$01
	STA (OFFSET2),Y
	JMP @FALSE
@CONTIN
	JSR _MULTNP
	CPX #$02
	BEQ @FALSE
	JMP @TRUE
	
;ai_hard_2_census()
;determine census regions (2 max)
_AICENS2
	LDA V_WEEK
	CMP #$03
	BCC @SKIP
	
	LDA C_MONEY
	CMP #20
	BCC @SKIP
	
	LDX #00
	STX V_AIPOLC
	STX FAI
@PRIORLP
	LDX FAI
	LDY FAI
	LDA V_PRIOR,X ;if NOT state to-visit, skip
	BEQ @NEXT
	LDA (OFFSET2),Y ;if state forgotten, skip
	BNE @NEXT
	
	LDA V_PRIOR2,X
	BMI @TVADS
	JSR _STATEGR
	JMP @GOTREG
@TVADS
	AND #$0F
	TAX
@GOTREG
	LDA V_AIPOLL-1,X ;no copies
	BNE @NEXT
	
	LDA V_AIPOLC ;2 censuses max
	CMP #$02
	BCS @SKIP
	
	LDA #$02
	STA V_AIPOLL-1,X
	JSR _AICENS
	INC V_AIPOLC
@NEXT
	INC FAI
	LDA FAI
	CMP #AISTATE
	BNE @PRIORLP
@SKIP
	RTS
	
;ai_census_cost(X = region)
_AICENS 
	LDA V_FHCOST+1
	SEC 
	SBC D_CENSUS-1,X
	STA V_FHCOST+1
	RTS 

;calc_priority_single(A = state index)
;calculate priority value for single state
;returns A = priority
;LOCAL: FVAR1
_AIHONE 
	STA FSTATE ;state index
	STA FARG1
	JSR _CPOFFS
	JSR _POPSUMR
	JSR _TMARGIN2 ;% margin between current, highest
	LDA FRET1
	STA FAICTRL

	LDA #00
	STA FAIMUL ;start with 1x multiplier
	STA FY1 ;zero priority flag
	;IND ignores 2 megastates
	LDA V_PARTY
	CMP #$02
	BNE @INDFILT
	LDA S_PLAYER
	CMP #$03
	BNE @INDFILT
	LDA FSTATE
	CMP V_INDSTA
	BEQ @IGNORE
	CMP V_INDSTA+1
	BEQ @IGNORE
	BNE @INDFILT
@IGNORE 
	LDA #01
	STA FY1
	JMP @ZEROPRI
@INDFILT 
	LDA FSTATE
	JSR _STATEGR
	LDA V_AIPOLL,X
	CMP #$01
	BEQ @POLL
	CMP #$02
	BEQ @CENSUS

;JSR _MULTAS
	JSR _MULTNP

@CALC ;state lean / 2
	LDA V_PARTY
	CLC 
	ADC #UND_OF1M
	TAY 
	LDA (CP_ADDR),Y
	LSR 
	STA FVAR1
	;if week < 4, no SL < 4
	LDA V_WEEK
	CMP #$04
	BCS @LEAN3
	LDA (CP_ADDR),Y
	CMP #$04
	BCS @LEAN3
	JMP @ZEROPRI
@LEAN3 
	;state EC / 4
	LDX FSTATE
	LDA V_EC,X
	LSR 
	LSR 
	LDX FVAR1
	BNE @ZEROLEAN
	LSR ;state EC / 8 if STATE LEAN = 1
@ZEROLEAN 
	CLC 
	ADC FVAR1
	BNE @MIN
	LDA #01 ;at least 1
@MIN 
	STA FVAR1

@MULTIPLY ;execute multipliers
	LDA FY1
	BEQ @SKIP0
@ZEROPRI 
	LDA #00 ;zero-priority exit
	RTS 
@SKIP0 
	LDX FAIMUL
	BEQ @SKIPMUL ;skip if no multiplier
	BMI @LESS
	LDA FVAR1
@2XLOOP 
	CLC 
	ROL 
	BCC @NOWRAP
	LDA #$FF ;cap priority at #$FF 
@NOWRAP 
	DEX 
	BNE @2XLOOP
	BEQ @DONEMUL
@LESS 
	LDA FVAR1
@12XLOOP 
	LSR 
	INX 
	BNE @12XLOOP
	CMP #00
	BNE @DONEMUL
	LDA #01
@DONEMUL 
	STA FVAR1
@SKIPMUL 
	LDA FVAR1
	RTS 
;sub-branches 
@POLL 
	JSR _MULTPOL
	JMP @CALC
@CENSUS 
	LDY #UND_OFFS
	LDA (CP_ADDR),Y

	BEQ @NOUND
	JSR _MULTPOL
	JSR _MULTUCP
	JMP @CALC
@NOUND 
	JSR _MULTNUN
	JMP @CALC

;calc_priority_group(A = REGION)
;..for group of states
;averages all single state priorities in group
;LOCAL: FX1,FVAR5-6
_AIHMANY 
	STA FVAR5
	JSR _GROUPLS ;get all states in region

	LDA #00
	STA FAISUM ;priority sum
	STA FAISUM+1

	LDX #00
	STX FX1
	STX FVAR6
@LOOP 
	LDX FX1
	LDA V_AISTAT,X
	BEQ @BREAK
	JSR _AIHONE
	BNE @ZEROINC
	INC FVAR6
@ZEROINC 
	CLC 
	ADC FAISUM
	STA FAISUM
	BCC @CARRY
	INC FAISUM+1
@CARRY 
	INC FX1
	JMP @LOOP
@BREAK 
	LDX FVAR5
	LDA D_REGC-1,X
	LSR 
	CMP FVAR6
	BCS @ZEROPRI
	LDA #00
	RTS 
@ZEROPRI 
	LDA FAISUM+1
	LDY FAISUM
	JSR _162FAC ;16bit to float FAC
	JSR _FAC2ARG ;FAC to ARG
	LDA #00
	LDY #00

	LDY FX1 ;state count
@COUNT 

	JSR _162FAC ;16bit to float FAC
	JSR _FDIVT ;FAC = ARG / FAC
	LDA #00 ;no negatives!
	STA $A2
	STA $AA
	JSR _FAC232 ;float FAC to 32bit

	LDA FAC+3
	BEQ @CAP
	LDA #$FF
	RTS 
@CAP 
	LDA FAC+4
	RTS 

;swap_sort() 
;LOCAL: FVAR1-3,FARG3
;sorts the priority list and its INDEX list 

;hard 2 AI call
_AISORT2 
	LDA #STATE_C
	STA FVAR3 ;length
	JMP _AISORT3
;hard 1 AI call
_AISORT 
	LDA #$1D
	STA FVAR3 ;length
_AISORT3 
	LDA #00
	STA FVAR2 ;done

@LOOP2 
	DEC FVAR3
	LDA #00
	STA FVAR1 ;index
@LOOP1 
	LDX FVAR1
	LDA V_PRIOR,X
	CMP V_PRIOR+1,X
	BCS @SKIPSWAP
	+__SWAPX V_PRIOR,V_PRIOR+1,FARG3
	+__SWAPX V_PRIOR2,V_PRIOR2+1,FARG3
;	+__SWAP .vprior1,.vprior1+1,FARG3
;	+__SWAP .vprior2,.vprior2+1,FARG3
	LDA #01
	STA FVAR2
@SKIPSWAP 
	INC FVAR1
	LDA FVAR1
	CMP FVAR3
	BCC @LOOP1

	LDA FVAR2
	BEQ @DONE
	LDA FVAR3
	BEQ @DONE
	BNE @LOOP2
@DONE 
	RTS 
	
;hard 2 AI call (conditional sort)
_AICSORT
	LDA #00
	STA FVAR1 ;priority index
@LOOP3
	LDA #00
	STA FVAR2 ;done sorting

	LDX FVAR1
	LDA V_PRIOR,X
	BEQ @RTS ;if 00, end
	STA FVAR3
@NEXTSL
	LDA V_PRIOR,X
	INX
	CMP FVAR3
	BEQ @NEXTSL
	DEX
	STX FVAR3 ;next state lean starting index
	STX FVAR4 ;copy
	LDX FVAR1
	STX FVAR5 ;priority starting index
	
	INX
	CPX FVAR4
	BEQ @DONE ;only one entry
	
@LOOP2 
	DEC FVAR4
	LDX FVAR5
	STX FVAR1
@LOOP1 
	LDX FVAR1
	LDA V_PRIOR2+1,X
	TAX
	JSR _AIH2EC
	STA FVAR6 ;EC count
	
	LDX FVAR1
	LDA V_PRIOR2,X
	TAX
	JSR _AIH2EC
	CMP FVAR6
	BCS @SKIPSWAP
	LDX FVAR1
	;+__SWAPX V_PRIOR,V_PRIOR+1,FARG3
	+__SWAPX V_PRIOR2,V_PRIOR2+1,FARG3
	LDA #01
	STA FVAR2
@SKIPSWAP
	INC FVAR1
	LDA FVAR1
	CMP FVAR4
	BCC @LOOP1

	LDA FVAR2
	BEQ @DONE
	LDX FVAR4
	CPX FVAR5
	BEQ @DONE
	;BCC @DONE
	BNE @LOOP2
@DONE
	LDX FVAR3
	STX FVAR1
	JMP @LOOP3
@RTS
	RTS

;get_und_multiplier() 
_MULTUCP 
	LDX #00
	LDY #UND_OFFS
	LDA (CP_ADDR),Y
	STA FVAR1
	
	;LDA V_WEEK
	;CMP #$09
	;BEQ @LASTWEEK

	LDA FVAR1
	CMP #$08 ;<8 UND CP
	BCS @C0
	BCC @DONE
@C0 
	INX
	BNE @DONE
@DONE 
	LDA D_AI_UCP,X
	CLC 
	ADC FAIMUL
	STA FAIMUL

	RTS 

;get_nopoll_multiplier() 
_MULTNP
	JSR _GETCTRL ;get control value (as on map)
	BEQ @MINE
	LDX FSTATE
	LDA V_CTRL,X
	CMP #UND_PRTY
	BNE @NOTMINE
	LDX #01
	BNE @DONE
@NOTMINE 
	LDX #00
	BEQ @DONE
@MINE 
	LDX #02
@DONE 
	LDA D_AI_NP,X
	CLC 
	ADC FAIMUL
	STA FAIMUL
	RTS 

;poll_multiplier() 
_MULTPOL 
	LDA V_FPOINT
	AND #$0F
	STA FVAR1
	BNE @CLOSE

	LDA V_FPOINT+1
	AND #$0F
	CMP #$06
	BCS @CLOSE
	LDX #04 ;<5% for any party
	BNE @DONE
@CLOSE 
	LDA FAICTRL ;get control value of margin
	BNE @CONTROL
	;opponent controls state
	LDX #03
	LDA FVAR1
	BEQ @DONE ;<10%
	DEX ;<30%
	CMP #$03
	BCS @C2
	BNE @DONE
@C2 
	DEX ;<50%
	CMP #$05
	BCS @C1
	BNE @DONE
@C1 
	DEX 
	BEQ @DONE ;>50%
@CONTROL ;AI controls state
	LDX #05
	LDA FVAR1
	BEQ @DONE ;<10%
	INX ;<30%
	CMP #$03
	BCS @C6
	BNE @DONE
@C6 
	INX ;<50%
	CMP #$05
	BCS @C7
	BNE @DONE
@C7 
	INX 
	BNE @DONE ;>50%
@DONE 
	LDA D_AI_POL,X
	CLC 
	ADC FAIMUL
	STA FAIMUL

	RTS

;get_nound_multiplier() 
_MULTNUN 
	LDA V_FPOINT
	AND #$0F
	STA FVAR1
	BNE @ZEROMUL ;>10%

	LDA V_FPOINT+1
	AND #$0F
	CMP #$06
	BCS @CLOSE
	LDX #01 ;<5% for any party
	BNE @DONE
@CLOSE 
	LDX #00 ;<10%..
@DONE 
	LDA D_AI_NUN,X
	CLC 
	ADC FAIMUL
	STA FAIMUL
	RTS 
@ZEROMUL 
	LDA #01 ;zero-priority flag ON
	STA FY1
	RTS

;get_assumed_multiplier() 
_MULTAS 
	LDA V_WEEK
	CMP #$04
	BCS @TWO
	RTS ;no change
@TWO CMP #$07
	BCS @THREE

	LDX FSTATE
	LDA V_EC,X
	CMP #$1C
	BCC @RTS
	DEC FAIMUL ;halve
	RTS 
@THREE 
	LDX FSTATE
	LDA V_EC,X
	CMP #$1C
	BCS @LARGER
	CMP #$0A
	BCS @SMALLER
	BCC @RTS
@LARGER 
	DEC FAIMUL ;quarter
@SMALLER 
	DEC FAIMUL
@RTS 
	RTS 

;group_state_list(A=region) 
;gets all states in region with EC < 10
;LOCAL: FVAR1-2
_GROUPLS 
	TAX 
	LDA D_REGLIM-1,X
	STA FVAR1
	LDA D_REGLIM,X
	STA FVAR2

	LDY #00
@LOOP 
	LDA FVAR1
	STA V_AISTAT,Y
	INY 
	INC FVAR1
	LDA FVAR1
	CMP FVAR2
	BNE @LOOP

	LDA #00
	STA V_AISTAT,Y ;list terminate
	RTS 

;get_control_state() 
;returns CMP (v_party == state control)
_GETCTRL 
	LDX FSTATE
	LDA V_CTRL,X
	CMP V_PARTY
	RTS
	
;average_values(FARG1 = count)
;averages up to 16 8-bit values in V_AISTAT
;cannot average totals past #$FF
_AVGVAL
	
	LDA #00
	TAX
@LOOP
	CLC
	ADC V_AISTAT,X
	INX
	CPX FARG1
	BNE @LOOP
	
	TAY
	LDA #00
	JSR _162FAC ;16bit to float FAC
	JSR _FAC2ARG ;FAC to ARG
	LDA #00
	LDY #00

	LDY FARG1 ;count

	JSR _162FAC ;16bit to float FAC
	JSR _FDIVT ;FAC = ARG / FAC
	LDA #00 ;no negatives!
	STA $A2
	STA $AA
	JSR _FAC232 ;float FAC to 32bit

	LDA FAC+3
	BEQ @CAP
	LDA #$FF
	RTS 
@CAP 
	LDA FAC+4
	RTS
		
;ai_hard_2_get_EC()
;gets EC value for specific state, or #$FF for region
_AIH2EC
	BMI @TVADS
	LDA V_EC,X
	RTS
@TVADS
	LDA #$FF
	RTS
	
;ai_clear_polls()
;clears all polled regions
_AICLRPL
	LDA #$00
	LDX #$00
@CLRLOOP
	STA V_AIPOLL,X
	INX
	CPX #$0A
	BNE @CLRLOOP
	RTS